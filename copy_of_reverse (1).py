# -*- coding: utf-8 -*-
"""Copy of Reverse.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zKsi14TR2EVpx5LGyLFdoromH7hgRXa7

Hii mand... let's get started

Pro tip - when you solve any big problem try to divide that problem into small chunks on paper as much as possible
"""



"""So here is basic problem statement that we need to solve




We need to reverse the integer by using core logic only and without using any string function

Case input - 456789


Case output - 987654
"""



"""Case input looks so complex isn't it üòÖ now we understand the scenario let's assume simple case and number which is probably your favourite number..ü§©

Input - 941


Output - 149
"""



"""Now understand what are the operation and things we need to use to get desirable output
.
.
.
.
.


Think for minute and write down the operations and conditional statement, iterations (if applicable) you are going to use......ü§î




.








.


.



Let's check your and mine list ..
"""





"""So basically it's raw logic problem

We need to use

1. Modulo - % (to get unit digit number)

2. Double division - // (to remove unit digit number)

3. Multiplication - *

4. Loop for iteration

Scared of loops no worries...üòä Let's solve with without loops first
"""



"""Lets start with one operation at time"""

Num = 123

print('value after performing modulo operation on num is',Num%10)

print('value after performing double division operation on num is',Num//10)

# Now it's your turn

# Take number 143 and perform above operations on this number

num = 143
a = num%10
print('modulo operation' ,a)
b= num//10
print('divison opeartion' , b)

num = 941
a = num%10
print('modulo operation' ,a)
b= num//10
print('divison opeartion' , b)

num = 774
num%10

"""Now you got idea how this operation works let's start to save result of this operation in variables and we have to do this recurring times"""

Num = 123

## now we will perform modulo operation with 10 to get unit digit i.e. 3

Unit1 = Num%10

print('Unit digit number of int',Num,' is ',Unit1)

"""Our integer is 123 and we got 3 number in Unit variable, now we don't need 3 in variable Num.

so we will remove 3 by using double division with 10.
"""

new_num = Num//10


print('value of new_num is ',new_num)

Unit2 = new_num%10

print('value of unit2 is ',Unit2)

print('unit1 has value ',Unit1)

# now we have to append the unit2 value in unit1

Unit1 = Unit1*10+Unit2

print('now value of Unit1 becomes ',Unit1)

new_num1 = new_num//10

print('value of new_num1 is ',new_num1)

Unit3 = new_num1%10

print('value of Unit3 is ',Unit3)

print('unit3 has value ',Unit3)

# now we have to append the unit3 value in unit1

Unit1 = Unit1*10+Unit3

print('now value of Unit1 becomes ',Unit1)


print('final value is ',Unit1)

"""We got our reverse integer..
.üòé
"""



"""*Now it's your turn try for 941*

Expected output is 149
"""

a = 941

Mod = a %10
Mod

Div = a//10
Div

mod1 = div%10
mod1

Mod = Mod*10 + mod1
Mod

Div2 = Div//10
Div2

mod2 = Div2%10
mod2

#Appedning second mode to the first
Mod = Mod*10 + mod2
Mod

print('Reverse String of 941 = ' , Mod)

"""Are you getting what we are doing..??

Now if you observe we are doing same operation i.e. modulo, double division and multiplication of unit digit repeatedly

So to avoid variable declaration and value storing multiple times we use loops

We will iterate loop unless and until we get 0 value.
"""

num = 941
final = 0
while num != 0:
   print('num ', num)
   unit=num%10
   print('unit ',unit)
   final = final*10+unit
   print('final ',final)
   num = num//10

print('reverse integer is ', final)

"""For any issues reach
Me at 9604998873 via call or message üòÇüòÇüòÇüòÇ

# New Section

Hello here is new question for you on the basis of previous one you have to solve this

1. You will be given one number and you need to find summation of its integers

Input - 941


Output - 14

9+4+1 = 14
"""

# Pro tip use same approach as above just you need to work on calculations

a = 941
Mod = a%10
Mod

div = a//10
div

Mod1 = div%10
Mod1

Final = Mod + Mod1
Final

div2 = div//10
div2

Mod2 = div2%10
Mod2

Final = Final + Mod2
Final

print ("Final Output 9+4+1 = " , Final)

num = 941
final = 0
while num != 0:
   print('num ', num)
   unit=num%10
   print('unit ',unit)
   final = final + unit
   print('final ',final)
   num = num//10

print('Final Output 9+4+1 = ', Final)

"""Very Nice...‚ú® Keep going

Here is two new tasks for you.

Task 1 -

Take input number from user and if sum of that number is odd then give output 'its odd' and if number is even then print 'its even.'

Input - 123


Output - its even

Input - 2025


Output - it's odd
"""

num = input()
if num % 2 == 0:
  print('its even')
else:
  print('its odd') ;

num = eval(input() )
if num % 2 == 0:
  print('its even')
else:
  print('its odd') ;

"""Task 2 -

I'm giving you number if it's prime number you need to print 'Prime' otherwise 'no prime'


Prime number is number who Is divisible by only 1 and that number it self.

Please write down the steps you will follow

1.


2.


3.
"""

num = int(input())

if num/ num == 1 and num / 1 == num:
  print('prime')
else:
  print('not prime')





"""Let's try one more number you have to find 7 is prime number or not

So prime number is basically number which is divisible by itself or 1.

‡§¶‡•Å‡§∏‡§∞‡§æ ‡§ï‡•ã‡§£‡§§‡•ç‡§Ø‡§æ‡§π‡•Ä ‡§®‡§Ç‡§¨‡§∞ ‡§®‡•á ‡§≠‡§æ‡§ó ‡§ú‡§æ‡§£‡§æ‡§∞ ‡§®‡§æ‡§π‡•Ä ‡§§‡•ç‡§Ø‡§æ‡§≤‡§æ
‡§Æ‡§ó ‡§Ü‡§™‡§£ ‡§ï‡§æ‡§Ø ‡§ï‡§∞‡•Ç‡§Ø‡§æ‡§§ , 1 ‡§Ü‡§£‡§ø 7 ‡§∏‡•ã‡§°‡•Ç‡§® ‡§¨‡§æ‡§ï‡•Ä ‡§®‡§Ç‡§¨‡§∞‡§®‡•á modulo operation ‡§ï‡§∞‡§æ‡§Ø‡§ö‡§æ try ‡§ï‡§∞‡•Ç ‡§ú‡§∞ reminder 0 ‡§Ü‡§≤‡•Ä ‡§§‡§∞ ‡§∏‡§Æ‡§ú‡§æ‡§Ø‡§ö‡§Ç prime ‡§®‡§æ‡§π‡•Ä‡§Ø‡•á otherwise it's prime number ok got it??
"""

num = 7

if num%2 == 0 or num%3==0 or num%4 == 0 or num%5 == 0 or num%6 == 0:
   print('oops its not prime number')
else:
   print('its prime number')

""" Now if you observe , jyane apan bhag lavtloy to number ek ek ne increment hotoy n varcha number constant rahtoy mhnje whole code mdhe tula number change karaycha ahe khalcha side cha to pn ek ek ne increment karun change karaycha ahe n we know if we have to perform incremental operation we use loops so let's try to solve by using loops"""

num = 6
for i in range(2, num):
    print(i)
    if num % i == 0:
        print('Number is not prime')
        break
else:
    print('It is a prime number!')

num = 7
for i in range(2, num):
    print(i)
    if num % i == 0:
        print('Number is not prime')
        break
else:
    print('It is a prime number!')

num = int(input())
for i in range(2, num):
    print(i)
    if num % i == 0:
        print('Number is not prime')
        break
else:
    print('It is a prime number!')



"""Else block ha shevti lihlay sagla loop samplya nantr to shevti run zala pahije karan sagle number ni divide karunch finally prime decide zala pahije n jar eka jari number ne divide zala tr pudh check nahi zala pahije mhnun break cha use kelay , jar ekane tr divide zala tr pudhcha block ch run zala nahi pahije"""



"""Heyyy... Sorry for delay here is new task for you


You need to find given number is Armstrong number or not

So what is Armstrong number ü§î

Armstrong number is a number that is equal to the sum of cubes of its digits


Let's take example

371

Sum of cube of 3,7,1 will be 371

3^3 + 7^3 + 1^3 = 371

Yuuppp.. 371 is Armstrong number
"""

num = 941
final = 0
while num != 0:
   print('num ', num)
   unit=num%10
   print('unit ',unit)
   final = final + unit
   print('final ',final)
   num = num//10

print('Final Output 9+4+1 = ', final)

num = 371
final = 0
while num != 0:
   print('num ', num)
   unit=num%10
   print('unit ',unit)
   a= unit**3
   print('a ',a)
   final = final + a
   print('final =',final)
   new_num = num//10
   if new_num == 0:
    break
else:
      print('Final Output 371 = ', final)

if final==num:
  print('armstrong')
else:
    print('no')

num = 371
final = 0
input = num
while num != 0:
    unit = num % 10
    print('unit ',unit)
    a = unit ** 3
    print('a=', a)
    final = final + a
    print('final =',final)
    num = num // 10
    print('3^3 + 7^3 + 1^3 =', final)



if input == final:
  print('armstrong')
else:
  print('Narmstrong')

input = num

if input == final:
  print('armstrong')
else:
  print('Narmstrong')

# please find 153 is Armstrong number or not if it is please give response 'ARMSTRONG'

num = 153
final = 0
input = num
while num != 0:
    unit = num % 10
    a = unit ** 3
    final = final + a
    num = num // 10


print('1^3 + 5^3 + 3^3 =', final)
print('input=153', 'and' ,'final =',final)



if input == final:
  print('armstrong')
else:
  print('Narmstrong')

# please find 142 is Armstrong number or not if it is please give response 'ARMSTRONG' if not then give 'NARMSTRONG

num = 142
final = 0
input = num
while num != 0:
    unit = num % 10

    a = unit ** 3

    final = final + a

    num = num // 10

print('1^3 + 4^3 + 2^3 =', final)

print('final=', final)


if input == final:
  print('armstrong')
else:
  print('Not an armstrong')

"""Let's start with one new approach and new question.

You need to find factors of any number

Input Number = 12

Output = factors are [2,3,4,6]

1 and 12 should exclude
"""

num = 12
for i in range(1, num):
    if num % i == 0:
      print(i)

num = 12
for i in range(2, num):
    if num % i == 0:
      print(i)



"""You need to find avg of given number

Input = 2,3,4,15

Output = 6
"""





input= [1,2,3,4,15]
sum = 0
for i in input:
  sum = sum + i

print('total sum',sum)


print(len(input))
avg = sum/len(input)
print('avg',avg)

input = '9012'
# output= 3

input = '9012'
num = int(input)  #converted string to int
final = 0
while num != 0:
  a = num % 10
  final = final + a
  num= num//10

print('sum', final)

avg = final / len(input)
print('avg',avg)

"""Tu num ghetlay while cha condition mdhe tyachi value kdhi kami honar ch nahi karan tu tyavr kahi operation nahi karate

N 2nd thing input//a nahi pahije input//10 kel tr reminder bajula kdhu shaknar tu

Pn mi tula string cha karyala sangitly tu integer ka number ghete
"""

input= '9012'
final=0

for i in input:
   final = final + int(i)

print(final)